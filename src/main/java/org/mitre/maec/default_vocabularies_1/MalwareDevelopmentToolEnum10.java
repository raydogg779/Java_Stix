//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.04.09 at 05:02:22 PM EDT 
//


package org.mitre.maec.default_vocabularies_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MalwareDevelopmentToolEnum-1.0.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MalwareDevelopmentToolEnum-1.0">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="builder"/>
 *     &lt;enumeration value="compiler"/>
 *     &lt;enumeration value="linker"/>
 *     &lt;enumeration value="packer"/>
 *     &lt;enumeration value="crypter"/>
 *     &lt;enumeration value="protector"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "MalwareDevelopmentToolEnum-1.0")
@XmlEnum
public enum MalwareDevelopmentToolEnum10 {


    /**
     * The 'builder' value specifies a malware builder tool (commonly used to mass-produce malware) that was used to generate the malware instance.
     * 
     */
    @XmlEnumValue("builder")
    BUILDER("builder"),

    /**
     * The 'compiler' value specifies a compiler tool that was used to compile the code composing the malware instance.
     * 
     */
    @XmlEnumValue("compiler")
    COMPILER("compiler"),

    /**
     * The 'linker' value specifies a linker tool that was used to link the object files associated with the malware instance.
     * 
     */
    @XmlEnumValue("linker")
    LINKER("linker"),

    /**
     * The 'packer' value specifies a packer tool that was used to shrink the size of the executable binary associated with the malware instance. Packers are also sometimes referred to as 'compressors'.
     * 
     */
    @XmlEnumValue("packer")
    PACKER("packer"),

    /**
     * The 'crypter' value specifies a crypter tool that was used to encrypt the executable binary associated with the malware instance.
     * 
     */
    @XmlEnumValue("crypter")
    CRYPTER("crypter"),

    /**
     * The 'protector' value specifies a protector tool that was used to obfuscate the executable binary associated with the malware instance to make it more difficult to reverse engineer.
     * 
     */
    @XmlEnumValue("protector")
    PROTECTOR("protector");
    private final String value;

    MalwareDevelopmentToolEnum10(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MalwareDevelopmentToolEnum10 fromValue(String v) {
        for (MalwareDevelopmentToolEnum10 c: MalwareDevelopmentToolEnum10 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
